// Supabase initialization with GitHub Pages support
// Replace these values with your Supabase project URL and anon key
const SUPABASE_URL = 'https://rfaqswspviygjcqtshds.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJmYXFzd3Nwdml5Z2pjcXRzaGRzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAzNjA1NzksImV4cCI6MjA3NTkzNjU3OX0.BZaAhvCtNDASXNnsUK-iIGvXTTLzF2kQOpIaW8-6uyY';

// Detectar ambiente
const isGitHubPages = window.location.hostname.includes('github.io');
const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';

console.log('üåç Ambiente detectado:', {
  hostname: window.location.hostname,
  origin: window.location.origin,
  isGitHubPages,
  isLocalhost
});

// The UMD build from CDN exposes a global named `supabase` with createClient()
// We create a client and attach it to window.supabase for use across your scripts
try {
  const _client = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
  window.supabase = _client;
  window.SUPABASE_CONFIGURED = SUPABASE_URL !== 'REPLACE_WITH_SUPABASE_URL' && SUPABASE_ANON_KEY !== 'REPLACE_WITH_SUPABASE_ANON_KEY';
  
  console.log('‚úÖ Supabase inicializado com sucesso');
  console.log('üîß Configurado:', window.SUPABASE_CONFIGURED);
} catch (e) {
  console.error('‚ùå Falha ao inicializar Supabase:', e);
  window.SUPABASE_CONFIGURED = false;
}

// Helper to get current user quickly
async function getCurrentUser() {
  if (!window.supabase) return null;
  const { data } = await window.supabase.auth.getUser();
  return data?.user || null;
}
